<?php

namespace App\Filament\Resources\ProtocolResource\Pages;

use App\Filament\Resources\ProtocolResource;
use App\Filament\Resources\PurchaseResource;
use App\Models\Article;
use App\Models\Buyer;
use App\Models\Car;
use App\Models\Violation;
use App\Models\Violator;
use App\Services\Product\ProductService;
use Filament\Actions;
use Filament\Facades\Filament;
use Filament\Forms\Components\Repeater;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Wizard\Step;
use Filament\Infolists\Components\Section;
use Filament\Resources\Pages\CreateRecord;
use Filament\Forms;
use Filament\Resources\Pages\CreateRecord\Concerns\HasWizard;

class CreateProtocol extends CreateRecord
{
    use HasWizard;

    protected static string $resource = ProtocolResource::class;

    protected static ?string $title = 'Создать протокол';

    protected ?int $violationId = null;
    protected ?int $categoryId = null;

    protected array $violator = [];
    protected array $car = [];

    public function __construct()
    {
        $this->violationId = $_GET['violation_id'] ?? null;
        $this->categoryId = $_GET['category_id'] ?? null;
    }

    protected function getSteps(): array
    {


        $secondStep = [
            Select::make('article_id')
                ->searchable()
                ->label('Статья')
                ->options(Article::all()->pluck('title', 'id')),
            TextInput::make('mrp')->label('Сумма штрафа(МРП)')->numeric(),
//            TextInput::make('car.number')->label('Государственный номер'),
//            TextInput::make('car.passport')->label('Номер техпаспорта'),
//            TextInput::make('car.mark')->label('Марка машины'),
//            TextInput::make('car.color')->label('Цвет машины'),
        ];
        return [
            Step::make('Данные нарушителя')
                ->schema([
                    Forms\Components\Hidden::make('violation_id')
                        ->label('Нарушение')
                        ->default($this->violationId),
                    TextInput::make('violator.iin')->label('ИИН нарушителя'),
                    TextInput::make('violator.fio')->label('ФИО'),
                    TextInput::make('violator.address')->label('Адрес'),
                    Forms\Components\DatePicker::make('violator.birthday')->label('Дата рождения'),
                ]),
            Step::make('Нарушение')
                ->schema($secondStep),
        ];
    }

    protected function mutateFormDataBeforeCreate(array $data): array
    {
        $this->violator = $data['violator'];
        $violator = Violator::where('iin', $data['violator']['iin'])->first();
        if (!$violator) {
            $violator = new Violator();
        }
        $violator->iin = $data['violator']['iin'];
        $violator->fio = $data['violator']['fio'];
        $violator->address = $data['violator']['address'];
        $violator->birthday = $data['violator']['birthday'];
        $violator->save();
        unset($data['violator']);
        $data['violator_id'] = $violator->id;

//        $car = Car::where('number', $data['car']['number'])->first();
//        if (!$car) {
//            $car = new Car();
//        }
//        $car->number = $data['car']['number'];
//        $car->passport = $data['car']['passport'];
//        $car->mark = $data['car']['mark'];
//        $car->color = $data['car']['color'];
//        $car->save();
//        unset($data['car']);
//        $data['car_id'] = $car->id;
        $data['police_id'] = Filament::auth()->user()->police_id;
        $data['status'] = 'created';
        $data['price'] = $data['mrp'] * 3692;
        return parent::mutateFormDataBeforeCreate($data); // TODO: Change the autogenerated stub
    }

    protected function getRedirectUrl(): string
    {
        return $this->previousUrl ?? $this->getResource()::getUrl('index');
    }

    protected function afterCreate(): void
    {
        $violation = Violation::where('id', $this->record->violation_id)->first();
        $violation->status = 'confirmed';
        $violation->save();
    }

}
